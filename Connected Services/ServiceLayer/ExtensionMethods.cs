//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generation date: 2/9/2023 12:16:29 PM
namespace SAPB1
{
    /// <summary>
    /// Class containing all extension methods
    /// </summary>
    public static class ExtensionMethods
    {
        /// <summary>
        /// Get an entity of type global::SAPB1.ChartOfAccount as global::SAPB1.ChartOfAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ChartOfAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ChartOfAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ChartOfAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ChartOfAccount as global::SAPB1.ChartOfAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ChartOfAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ChartOfAccount> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ChartOfAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccountSegmentationCategory as global::SAPB1.AccountSegmentationCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AccountSegmentationCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccountSegmentationCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AccountSegmentationCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccountSegmentationCategory as global::SAPB1.AccountSegmentationCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="segmentID">The value of segmentID</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AccountSegmentationCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccountSegmentationCategory> _source,
            int segmentID, 
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SegmentID", segmentID }, 
                { "Code", code }
            };
            return new global::SAPB1.AccountSegmentationCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunitySourceSetup as global::SAPB1.SalesOpportunitySourceSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesOpportunitySourceSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunitySourceSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesOpportunitySourceSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunitySourceSetup as global::SAPB1.SalesOpportunitySourceSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sequenceNo">The value of sequenceNo</param>
        public static global::SAPB1.SalesOpportunitySourceSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunitySourceSetup> _source,
            int sequenceNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SequenceNo", sequenceNo }
            };
            return new global::SAPB1.SalesOpportunitySourceSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UnitOfMeasurement as global::SAPB1.UnitOfMeasurementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UnitOfMeasurementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UnitOfMeasurement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UnitOfMeasurementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UnitOfMeasurement as global::SAPB1.UnitOfMeasurementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.UnitOfMeasurementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UnitOfMeasurement> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.UnitOfMeasurementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPartnerGroup as global::SAPB1.BusinessPartnerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BusinessPartnerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPartnerGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BusinessPartnerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPartnerGroup as global::SAPB1.BusinessPartnerGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.BusinessPartnerGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPartnerGroup> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.BusinessPartnerGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Team as global::SAPB1.TeamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TeamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Team> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TeamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Team as global::SAPB1.TeamSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="teamID">The value of teamID</param>
        public static global::SAPB1.TeamSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Team> _source,
            int teamID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TeamID", teamID }
            };
            return new global::SAPB1.TeamSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BankStatement as global::SAPB1.BankStatementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BankStatementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BankStatement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BankStatementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BankStatement as global::SAPB1.BankStatementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="internalNumber">The value of internalNumber</param>
        public static global::SAPB1.BankStatementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BankStatement> _source,
            int internalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InternalNumber", internalNumber }
            };
            return new global::SAPB1.BankStatementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Section as global::SAPB1.SectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Section> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Section as global::SAPB1.SectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.SectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Section> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.SectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ApprovalRequest as global::SAPB1.ApprovalRequestSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ApprovalRequestSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ApprovalRequest> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ApprovalRequestSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ApprovalRequest as global::SAPB1.ApprovalRequestSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ApprovalRequestSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ApprovalRequest> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ApprovalRequestSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityLocation as global::SAPB1.ActivityLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ActivityLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ActivityLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityLocation as global::SAPB1.ActivityLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ActivityLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityLocation> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ActivityLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BatchNumberDetail as global::SAPB1.BatchNumberDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BatchNumberDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BatchNumberDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BatchNumberDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BatchNumberDetail as global::SAPB1.BatchNumberDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.BatchNumberDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BatchNumberDetail> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.BatchNumberDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InternalReconciliation as global::SAPB1.InternalReconciliationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.InternalReconciliationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InternalReconciliation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.InternalReconciliationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InternalReconciliation as global::SAPB1.InternalReconciliationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="reconNum">The value of reconNum</param>
        public static global::SAPB1.InternalReconciliationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InternalReconciliation> _source,
            int reconNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ReconNum", reconNum }
            };
            return new global::SAPB1.InternalReconciliationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FinancialYear as global::SAPB1.FinancialYearSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.FinancialYearSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FinancialYear> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.FinancialYearSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FinancialYear as global::SAPB1.FinancialYearSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.FinancialYearSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FinancialYear> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.FinancialYearSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SerialNumberDetail as global::SAPB1.SerialNumberDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SerialNumberDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SerialNumberDetail> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SerialNumberDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SerialNumberDetail as global::SAPB1.SerialNumberDetailSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.SerialNumberDetailSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SerialNumberDetail> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.SerialNumberDetailSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryPosting as global::SAPB1.InventoryPostingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.InventoryPostingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryPosting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.InventoryPostingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryPosting as global::SAPB1.InventoryPostingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="documentEntry">The value of documentEntry</param>
        public static global::SAPB1.InventoryPostingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryPosting> _source,
            int documentEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocumentEntry", documentEntry }
            };
            return new global::SAPB1.InventoryPostingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.OccurenceCode as global::SAPB1.OccurenceCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.OccurenceCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.OccurenceCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.OccurenceCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.OccurenceCode as global::SAPB1.OccurenceCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.OccurenceCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.OccurenceCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.OccurenceCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CertificateSeries as global::SAPB1.CertificateSeriesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CertificateSeriesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CertificateSeries> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CertificateSeriesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CertificateSeries as global::SAPB1.CertificateSeriesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.CertificateSeriesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CertificateSeries> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.CertificateSeriesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NatureOfAssessee as global::SAPB1.NatureOfAssesseeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NatureOfAssesseeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NatureOfAssessee> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NatureOfAssesseeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NatureOfAssessee as global::SAPB1.NatureOfAssesseeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.NatureOfAssesseeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NatureOfAssessee> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.NatureOfAssesseeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesStage as global::SAPB1.SalesStageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesStageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesStage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesStageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesStage as global::SAPB1.SalesStageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sequenceNo">The value of sequenceNo</param>
        public static global::SAPB1.SalesStageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesStage> _source,
            int sequenceNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SequenceNo", sequenceNo }
            };
            return new global::SAPB1.SalesStageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExtendedTranslation as global::SAPB1.ExtendedTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ExtendedTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExtendedTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ExtendedTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExtendedTranslation as global::SAPB1.ExtendedTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.ExtendedTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExtendedTranslation> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.ExtendedTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WarehouseLocation as global::SAPB1.WarehouseLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WarehouseLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WarehouseLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WarehouseLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WarehouseLocation as global::SAPB1.WarehouseLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.WarehouseLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WarehouseLocation> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.WarehouseLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CommissionGroup as global::SAPB1.CommissionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CommissionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CommissionGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CommissionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CommissionGroup as global::SAPB1.CommissionGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="commissionGroupCode">The value of commissionGroupCode</param>
        public static global::SAPB1.CommissionGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CommissionGroup> _source,
            int commissionGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CommissionGroupCode", commissionGroupCode }
            };
            return new global::SAPB1.CommissionGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ReportType as global::SAPB1.ReportTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ReportTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ReportType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ReportTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ReportType as global::SAPB1.ReportTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="typeCode">The value of typeCode</param>
        public static global::SAPB1.ReportTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ReportType> _source,
            string typeCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TypeCode", typeCode }
            };
            return new global::SAPB1.ReportTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Territory as global::SAPB1.TerritorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TerritorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Territory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TerritorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Territory as global::SAPB1.TerritorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="territoryID">The value of territoryID</param>
        public static global::SAPB1.TerritorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Territory> _source,
            int territoryID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TerritoryID", territoryID }
            };
            return new global::SAPB1.TerritorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunityReasonSetup as global::SAPB1.SalesOpportunityReasonSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesOpportunityReasonSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunityReasonSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesOpportunityReasonSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunityReasonSetup as global::SAPB1.SalesOpportunityReasonSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sequenceNo">The value of sequenceNo</param>
        public static global::SAPB1.SalesOpportunityReasonSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunityReasonSetup> _source,
            int sequenceNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SequenceNo", sequenceNo }
            };
            return new global::SAPB1.SalesOpportunityReasonSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UnitOfMeasurementGroup as global::SAPB1.UnitOfMeasurementGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UnitOfMeasurementGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UnitOfMeasurementGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UnitOfMeasurementGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UnitOfMeasurementGroup as global::SAPB1.UnitOfMeasurementGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.UnitOfMeasurementGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UnitOfMeasurementGroup> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.UnitOfMeasurementGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserKeysMD as global::SAPB1.UserKeysMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserKeysMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserKeysMD> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserKeysMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserKeysMD as global::SAPB1.UserKeysMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="tableName">The value of tableName</param>
        /// <param name="keyIndex">The value of keyIndex</param>
        public static global::SAPB1.UserKeysMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserKeysMD> _source,
            string tableName, 
            int keyIndex)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TableName", tableName }, 
                { "KeyIndex", keyIndex }
            };
            return new global::SAPB1.UserKeysMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BinLocationField as global::SAPB1.BinLocationFieldSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BinLocationFieldSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BinLocationField> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BinLocationFieldSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BinLocationField as global::SAPB1.BinLocationFieldSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.BinLocationFieldSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BinLocationField> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.BinLocationFieldSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BinLocationAttribute as global::SAPB1.BinLocationAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BinLocationAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BinLocationAttribute> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BinLocationAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BinLocationAttribute as global::SAPB1.BinLocationAttributeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.BinLocationAttributeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BinLocationAttribute> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.BinLocationAttributeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WarehouseSublevelCode as global::SAPB1.WarehouseSublevelCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WarehouseSublevelCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WarehouseSublevelCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WarehouseSublevelCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WarehouseSublevelCode as global::SAPB1.WarehouseSublevelCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.WarehouseSublevelCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WarehouseSublevelCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.WarehouseSublevelCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EWBTransporter as global::SAPB1.EWBTransporterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EWBTransporterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EWBTransporter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EWBTransporterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EWBTransporter as global::SAPB1.EWBTransporterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.EWBTransporterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EWBTransporter> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.EWBTransporterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Deposit as global::SAPB1.DepositSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DepositSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Deposit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DepositSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Deposit as global::SAPB1.DepositSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.DepositSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Deposit> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.DepositSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CashDiscount as global::SAPB1.CashDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CashDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CashDiscount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CashDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CashDiscount as global::SAPB1.CashDiscountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.CashDiscountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CashDiscount> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.CashDiscountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BinLocation as global::SAPB1.BinLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BinLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BinLocation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BinLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BinLocation as global::SAPB1.BinLocationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.BinLocationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BinLocation> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.BinLocationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallType as global::SAPB1.ServiceCallTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallType as global::SAPB1.ServiceCallTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="callTypeID">The value of callTypeID</param>
        public static global::SAPB1.ServiceCallTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallType> _source,
            int callTypeID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CallTypeID", callTypeID }
            };
            return new global::SAPB1.ServiceCallTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Activity as global::SAPB1.ActivitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ActivitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Activity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ActivitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Activity as global::SAPB1.ActivitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="activityCode">The value of activityCode</param>
        public static global::SAPB1.ActivitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Activity> _source,
            int activityCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ActivityCode", activityCode }
            };
            return new global::SAPB1.ActivitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Message as global::SAPB1.MessageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.MessageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Message> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.MessageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Message as global::SAPB1.MessageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.MessageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Message> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.MessageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityType as global::SAPB1.ActivityTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ActivityTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ActivityTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityType as global::SAPB1.ActivityTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ActivityTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityType> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ActivityTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ShippingType as global::SAPB1.ShippingTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ShippingTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ShippingType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ShippingTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ShippingType as global::SAPB1.ShippingTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ShippingTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ShippingType> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ShippingTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Holiday as global::SAPB1.HolidaySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.HolidaySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Holiday> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.HolidaySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Holiday as global::SAPB1.HolidaySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="holidayCode">The value of holidayCode</param>
        public static global::SAPB1.HolidaySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Holiday> _source,
            string holidayCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "HolidayCode", holidayCode }
            };
            return new global::SAPB1.HolidaySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.RetornoCode as global::SAPB1.RetornoCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.RetornoCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.RetornoCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.RetornoCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.RetornoCode as global::SAPB1.RetornoCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.RetornoCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.RetornoCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.RetornoCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PartnersSetup as global::SAPB1.PartnersSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PartnersSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PartnersSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PartnersSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PartnersSetup as global::SAPB1.PartnersSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="partnerID">The value of partnerID</param>
        public static global::SAPB1.PartnersSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PartnersSetup> _source,
            int partnerID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PartnerID", partnerID }
            };
            return new global::SAPB1.PartnersSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserObjectsMD as global::SAPB1.UserObjectsMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserObjectsMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserObjectsMD> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserObjectsMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserObjectsMD as global::SAPB1.UserObjectsMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.UserObjectsMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserObjectsMD> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.UserObjectsMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxWebSite as global::SAPB1.TaxWebSiteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TaxWebSiteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxWebSite> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TaxWebSiteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxWebSite as global::SAPB1.TaxWebSiteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.TaxWebSiteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxWebSite> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.TaxWebSiteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BOEPortfolio as global::SAPB1.BOEPortfolioSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BOEPortfolioSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BOEPortfolio> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BOEPortfolioSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BOEPortfolio as global::SAPB1.BOEPortfolioSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="portfolioEntry">The value of portfolioEntry</param>
        public static global::SAPB1.BOEPortfolioSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BOEPortfolio> _source,
            int portfolioEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PortfolioEntry", portfolioEntry }
            };
            return new global::SAPB1.BOEPortfolioSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BankChargesAllocationCode as global::SAPB1.BankChargesAllocationCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BankChargesAllocationCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BankChargesAllocationCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BankChargesAllocationCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BankChargesAllocationCode as global::SAPB1.BankChargesAllocationCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.BankChargesAllocationCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BankChargesAllocationCode> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.BankChargesAllocationCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunityCompetitorSetup as global::SAPB1.SalesOpportunityCompetitorSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesOpportunityCompetitorSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunityCompetitorSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesOpportunityCompetitorSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunityCompetitorSetup as global::SAPB1.SalesOpportunityCompetitorSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sequenceNo">The value of sequenceNo</param>
        public static global::SAPB1.SalesOpportunityCompetitorSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunityCompetitorSetup> _source,
            int sequenceNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SequenceNo", sequenceNo }
            };
            return new global::SAPB1.SalesOpportunityCompetitorSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivitySubject as global::SAPB1.ActivitySubjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ActivitySubjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivitySubject> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ActivitySubjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivitySubject as global::SAPB1.ActivitySubjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ActivitySubjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivitySubject> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ActivitySubjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryCycles as global::SAPB1.InventoryCyclesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.InventoryCyclesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryCycles> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.InventoryCyclesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryCycles as global::SAPB1.InventoryCyclesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="cycleCode">The value of cycleCode</param>
        public static global::SAPB1.InventoryCyclesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryCycles> _source,
            int cycleCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CycleCode", cycleCode }
            };
            return new global::SAPB1.InventoryCyclesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Document as global::SAPB1.DocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Document> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Document as global::SAPB1.DocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.DocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Document> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.DocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeductionTaxHierarchy as global::SAPB1.DeductionTaxHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DeductionTaxHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeductionTaxHierarchy> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DeductionTaxHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeductionTaxHierarchy as global::SAPB1.DeductionTaxHierarchySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.DeductionTaxHierarchySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeductionTaxHierarchy> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.DeductionTaxHierarchySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ApprovalStage as global::SAPB1.ApprovalStageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ApprovalStageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ApprovalStage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ApprovalStageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ApprovalStage as global::SAPB1.ApprovalStageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ApprovalStageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ApprovalStage> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ApprovalStageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeductionTaxGroup as global::SAPB1.DeductionTaxGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DeductionTaxGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeductionTaxGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DeductionTaxGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeductionTaxGroup as global::SAPB1.DeductionTaxGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupKey">The value of groupKey</param>
        public static global::SAPB1.DeductionTaxGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeductionTaxGroup> _source,
            int groupKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupKey", groupKey }
            };
            return new global::SAPB1.DeductionTaxGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExportDetermination as global::SAPB1.ExportDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ExportDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExportDetermination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ExportDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExportDetermination as global::SAPB1.ExportDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.ExportDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExportDetermination> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.ExportDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.State as global::SAPB1.StateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.StateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.State> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.StateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.State as global::SAPB1.StateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        /// <param name="country">The value of country</param>
        public static global::SAPB1.StateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.State> _source,
            string code, 
            string country)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }, 
                { "Country", country }
            };
            return new global::SAPB1.StateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.StockTransfer as global::SAPB1.StockTransferSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.StockTransferSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.StockTransfer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.StockTransferSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.StockTransfer as global::SAPB1.StockTransferSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.StockTransferSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.StockTransfer> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.StockTransferSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.JournalEntryDocumentType as global::SAPB1.JournalEntryDocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.JournalEntryDocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.JournalEntryDocumentType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.JournalEntryDocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.JournalEntryDocumentType as global::SAPB1.JournalEntryDocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="journalEntryType">The value of journalEntryType</param>
        public static global::SAPB1.JournalEntryDocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.JournalEntryDocumentType> _source,
            string journalEntryType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JournalEntryType", journalEntryType }
            };
            return new global::SAPB1.JournalEntryDocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxAuthority as global::SAPB1.SalesTaxAuthoritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesTaxAuthoritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxAuthority> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesTaxAuthoritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxAuthority as global::SAPB1.SalesTaxAuthoritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="type">The value of type</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.SalesTaxAuthoritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxAuthority> _source,
            int type, 
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Type", type }, 
                { "Code", code }
            };
            return new global::SAPB1.SalesTaxAuthoritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Branch as global::SAPB1.BranchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BranchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Branch> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BranchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Branch as global::SAPB1.BranchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.BranchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Branch> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.BranchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DNFCodeSetup as global::SAPB1.DNFCodeSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DNFCodeSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DNFCodeSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DNFCodeSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DNFCodeSetup as global::SAPB1.DNFCodeSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.DNFCodeSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DNFCodeSetup> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.DNFCodeSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.QueryCategory as global::SAPB1.QueryCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.QueryCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.QueryCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.QueryCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.QueryCategory as global::SAPB1.QueryCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.QueryCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.QueryCategory> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.QueryCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Department as global::SAPB1.DepartmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DepartmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Department> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DepartmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Department as global::SAPB1.DepartmentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.DepartmentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Department> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.DepartmentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientLaunchpad as global::SAPB1.WebClientLaunchpadSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientLaunchpadSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientLaunchpad> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientLaunchpadSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientLaunchpad as global::SAPB1.WebClientLaunchpadSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientLaunchpadSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientLaunchpad> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientLaunchpadSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Cockpit as global::SAPB1.CockpitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CockpitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Cockpit> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CockpitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Cockpit as global::SAPB1.CockpitSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.CockpitSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Cockpit> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.CockpitSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ProductionOrder as global::SAPB1.ProductionOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ProductionOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ProductionOrder> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ProductionOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ProductionOrder as global::SAPB1.ProductionOrderSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.ProductionOrderSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ProductionOrder> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.ProductionOrderSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxReportFilter as global::SAPB1.TaxReportFilterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TaxReportFilterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxReportFilter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TaxReportFilterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxReportFilter as global::SAPB1.TaxReportFilterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.TaxReportFilterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxReportFilter> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.TaxReportFilterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.User as global::SAPB1.UserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.User> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.User as global::SAPB1.UserSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="internalKey">The value of internalKey</param>
        public static global::SAPB1.UserSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.User> _source,
            int internalKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InternalKey", internalKey }
            };
            return new global::SAPB1.UserSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ApprovalTemplate as global::SAPB1.ApprovalTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ApprovalTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ApprovalTemplate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ApprovalTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ApprovalTemplate as global::SAPB1.ApprovalTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ApprovalTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ApprovalTemplate> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ApprovalTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AdditionalExpense as global::SAPB1.AdditionalExpenseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AdditionalExpenseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AdditionalExpense> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AdditionalExpenseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AdditionalExpense as global::SAPB1.AdditionalExpenseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="expensCode">The value of expensCode</param>
        public static global::SAPB1.AdditionalExpenseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AdditionalExpense> _source,
            int expensCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ExpensCode", expensCode }
            };
            return new global::SAPB1.AdditionalExpenseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BlanketAgreement as global::SAPB1.BlanketAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BlanketAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BlanketAgreement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BlanketAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BlanketAgreement as global::SAPB1.BlanketAgreementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="agreementNo">The value of agreementNo</param>
        public static global::SAPB1.BlanketAgreementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BlanketAgreement> _source,
            int agreementNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AgreementNo", agreementNo }
            };
            return new global::SAPB1.BlanketAgreementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WizardPaymentMethod as global::SAPB1.WizardPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WizardPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WizardPaymentMethod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WizardPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WizardPaymentMethod as global::SAPB1.WizardPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="paymentMethodCode">The value of paymentMethodCode</param>
        public static global::SAPB1.WizardPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WizardPaymentMethod> _source,
            string paymentMethodCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PaymentMethodCode", paymentMethodCode }
            };
            return new global::SAPB1.WizardPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetRevaluation as global::SAPB1.AssetRevaluationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AssetRevaluationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetRevaluation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AssetRevaluationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetRevaluation as global::SAPB1.AssetRevaluationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.AssetRevaluationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetRevaluation> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.AssetRevaluationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxAuthoritiesType as global::SAPB1.SalesTaxAuthoritiesTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesTaxAuthoritiesTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxAuthoritiesType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesTaxAuthoritiesTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxAuthoritiesType as global::SAPB1.SalesTaxAuthoritiesTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.SalesTaxAuthoritiesTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxAuthoritiesType> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.SalesTaxAuthoritiesTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.KPI as global::SAPB1.KPISingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.KPISingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.KPI> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.KPISingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.KPI as global::SAPB1.KPISingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="kPICode">The value of kPICode</param>
        public static global::SAPB1.KPISingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.KPI> _source,
            string kPICode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "KPICode", kPICode }
            };
            return new global::SAPB1.KPISingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxCode as global::SAPB1.SalesTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxCode as global::SAPB1.SalesTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.SalesTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxCode> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.SalesTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MobileAddOnSetting as global::SAPB1.MobileAddOnSettingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.MobileAddOnSettingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MobileAddOnSetting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.MobileAddOnSettingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MobileAddOnSetting as global::SAPB1.MobileAddOnSettingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.MobileAddOnSettingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MobileAddOnSetting> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.MobileAddOnSettingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Payment as global::SAPB1.PaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Payment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Payment as global::SAPB1.PaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.PaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Payment> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.PaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Country as global::SAPB1.CountrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CountrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Country> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CountrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Country as global::SAPB1.CountrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.CountrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Country> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.CountrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TargetGroup as global::SAPB1.TargetGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TargetGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TargetGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TargetGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TargetGroup as global::SAPB1.TargetGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="targetGroupCode">The value of targetGroupCode</param>
        public static global::SAPB1.TargetGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TargetGroup> _source,
            string targetGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TargetGroupCode", targetGroupCode }
            };
            return new global::SAPB1.TargetGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Campaign as global::SAPB1.CampaignSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CampaignSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Campaign> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CampaignSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Campaign as global::SAPB1.CampaignSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="campaignNumber">The value of campaignNumber</param>
        public static global::SAPB1.CampaignSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Campaign> _source,
            int campaignNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CampaignNumber", campaignNumber }
            };
            return new global::SAPB1.CampaignSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IndiaHsn as global::SAPB1.IndiaHsnSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.IndiaHsnSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IndiaHsn> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.IndiaHsnSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IndiaHsn as global::SAPB1.IndiaHsnSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.IndiaHsnSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IndiaHsn> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.IndiaHsnSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ResourceCapacity as global::SAPB1.ResourceCapacitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ResourceCapacitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ResourceCapacity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ResourceCapacitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ResourceCapacity as global::SAPB1.ResourceCapacitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="id">The value of id</param>
        public static global::SAPB1.ResourceCapacitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ResourceCapacity> _source,
            int id)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Id", id }
            };
            return new global::SAPB1.ResourceCapacitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LengthMeasure as global::SAPB1.LengthMeasureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.LengthMeasureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LengthMeasure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.LengthMeasureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LengthMeasure as global::SAPB1.LengthMeasureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="unitCode">The value of unitCode</param>
        public static global::SAPB1.LengthMeasureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LengthMeasure> _source,
            int unitCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UnitCode", unitCode }
            };
            return new global::SAPB1.LengthMeasureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FactoringIndicator as global::SAPB1.FactoringIndicatorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.FactoringIndicatorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FactoringIndicator> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.FactoringIndicatorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FactoringIndicator as global::SAPB1.FactoringIndicatorSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="indicatorCode">The value of indicatorCode</param>
        public static global::SAPB1.FactoringIndicatorSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FactoringIndicator> _source,
            string indicatorCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "IndicatorCode", indicatorCode }
            };
            return new global::SAPB1.FactoringIndicatorSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccountSegmentation as global::SAPB1.AccountSegmentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AccountSegmentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccountSegmentation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AccountSegmentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccountSegmentation as global::SAPB1.AccountSegmentationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.AccountSegmentationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccountSegmentation> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.AccountSegmentationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.VatGroup as global::SAPB1.VatGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.VatGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.VatGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.VatGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.VatGroup as global::SAPB1.VatGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.VatGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.VatGroup> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.VatGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BPPriority as global::SAPB1.BPPrioritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BPPrioritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BPPriority> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BPPrioritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BPPriority as global::SAPB1.BPPrioritySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="priority">The value of priority</param>
        public static global::SAPB1.BPPrioritySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BPPriority> _source,
            int priority)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Priority", priority }
            };
            return new global::SAPB1.BPPrioritySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Forms1099 as global::SAPB1.Forms1099Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.Forms1099Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Forms1099> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.Forms1099Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Forms1099 as global::SAPB1.Forms1099Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="formCode">The value of formCode</param>
        public static global::SAPB1.Forms1099Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Forms1099> _source,
            int formCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FormCode", formCode }
            };
            return new global::SAPB1.Forms1099Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DepreciationType as global::SAPB1.DepreciationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DepreciationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DepreciationType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DepreciationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DepreciationType as global::SAPB1.DepreciationTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.DepreciationTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DepreciationType> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.DepreciationTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FAAccountDetermination as global::SAPB1.FAAccountDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.FAAccountDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FAAccountDetermination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.FAAccountDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FAAccountDetermination as global::SAPB1.FAAccountDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.FAAccountDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FAAccountDetermination> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.FAAccountDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NotaFiscalCFOP as global::SAPB1.NotaFiscalCFOPSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NotaFiscalCFOPSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NotaFiscalCFOP> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NotaFiscalCFOPSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NotaFiscalCFOP as global::SAPB1.NotaFiscalCFOPSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::SAPB1.NotaFiscalCFOPSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NotaFiscalCFOP> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::SAPB1.NotaFiscalCFOPSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DepreciationArea as global::SAPB1.DepreciationAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DepreciationAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DepreciationArea> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DepreciationAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DepreciationArea as global::SAPB1.DepreciationAreaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.DepreciationAreaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DepreciationArea> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.DepreciationAreaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallOrigin as global::SAPB1.ServiceCallOriginSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallOriginSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallOrigin> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallOriginSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallOrigin as global::SAPB1.ServiceCallOriginSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="originID">The value of originID</param>
        public static global::SAPB1.ServiceCallOriginSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallOrigin> _source,
            int originID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "OriginID", originID }
            };
            return new global::SAPB1.ServiceCallOriginSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DepreciationTypePool as global::SAPB1.DepreciationTypePoolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DepreciationTypePoolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DepreciationTypePool> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DepreciationTypePoolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DepreciationTypePool as global::SAPB1.DepreciationTypePoolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.DepreciationTypePoolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DepreciationTypePool> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.DepreciationTypePoolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetClass as global::SAPB1.AssetClassSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AssetClassSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetClass> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AssetClassSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetClass as global::SAPB1.AssetClassSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AssetClassSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetClass> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.AssetClassSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IntrastatConfiguration as global::SAPB1.IntrastatConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.IntrastatConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IntrastatConfiguration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.IntrastatConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IntrastatConfiguration as global::SAPB1.IntrastatConfigurationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.IntrastatConfigurationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IntrastatConfiguration> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.IntrastatConfigurationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetGroup as global::SAPB1.AssetGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AssetGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AssetGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetGroup as global::SAPB1.AssetGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AssetGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetGroup> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.AssetGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExceptionalEvent as global::SAPB1.ExceptionalEventSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ExceptionalEventSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExceptionalEvent> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ExceptionalEventSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExceptionalEvent as global::SAPB1.ExceptionalEventSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ExceptionalEventSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExceptionalEvent> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ExceptionalEventSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientNotification as global::SAPB1.WebClientNotificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientNotificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientNotification> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientNotificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientNotification as global::SAPB1.WebClientNotificationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientNotificationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientNotification> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientNotificationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeterminationCriteria as global::SAPB1.DeterminationCriteriaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DeterminationCriteriaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeterminationCriteria> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DeterminationCriteriaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeterminationCriteria as global::SAPB1.DeterminationCriteriaSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dmcId">The value of dmcId</param>
        public static global::SAPB1.DeterminationCriteriaSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeterminationCriteria> _source,
            int dmcId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DmcId", dmcId }
            };
            return new global::SAPB1.DeterminationCriteriaSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetDocument as global::SAPB1.AssetDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AssetDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetDocument> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AssetDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetDocument as global::SAPB1.AssetDocumentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.AssetDocumentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetDocument> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.AssetDocumentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientListviewFilter as global::SAPB1.WebClientListviewFilterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientListviewFilterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientListviewFilter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientListviewFilterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientListviewFilter as global::SAPB1.WebClientListviewFilterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientListviewFilterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientListviewFilter> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientListviewFilterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.GLAccountAdvancedRule as global::SAPB1.GLAccountAdvancedRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.GLAccountAdvancedRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.GLAccountAdvancedRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.GLAccountAdvancedRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.GLAccountAdvancedRule as global::SAPB1.GLAccountAdvancedRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.GLAccountAdvancedRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.GLAccountAdvancedRule> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.GLAccountAdvancedRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BarCode as global::SAPB1.BarCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BarCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BarCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BarCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BarCode as global::SAPB1.BarCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.BarCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BarCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.BarCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ProfitCenter as global::SAPB1.ProfitCenterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ProfitCenterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ProfitCenter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ProfitCenterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ProfitCenter as global::SAPB1.ProfitCenterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="centerCode">The value of centerCode</param>
        public static global::SAPB1.ProfitCenterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ProfitCenter> _source,
            string centerCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CenterCode", centerCode }
            };
            return new global::SAPB1.ProfitCenterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryCounting as global::SAPB1.InventoryCountingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.InventoryCountingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryCounting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.InventoryCountingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryCounting as global::SAPB1.InventoryCountingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="documentEntry">The value of documentEntry</param>
        public static global::SAPB1.InventoryCountingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryCounting> _source,
            int documentEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocumentEntry", documentEntry }
            };
            return new global::SAPB1.InventoryCountingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EnhancedDiscountGroup as global::SAPB1.EnhancedDiscountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EnhancedDiscountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EnhancedDiscountGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EnhancedDiscountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EnhancedDiscountGroup as global::SAPB1.EnhancedDiscountGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.EnhancedDiscountGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EnhancedDiscountGroup> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.EnhancedDiscountGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CycleCountDetermination as global::SAPB1.CycleCountDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CycleCountDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CycleCountDetermination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CycleCountDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CycleCountDetermination as global::SAPB1.CycleCountDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="warehouseCode">The value of warehouseCode</param>
        public static global::SAPB1.CycleCountDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CycleCountDetermination> _source,
            string warehouseCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "WarehouseCode", warehouseCode }
            };
            return new global::SAPB1.CycleCountDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetDepreciationGroup as global::SAPB1.AssetDepreciationGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AssetDepreciationGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetDepreciationGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AssetDepreciationGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AssetDepreciationGroup as global::SAPB1.AssetDepreciationGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AssetDepreciationGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AssetDepreciationGroup> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.AssetDepreciationGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityStatus as global::SAPB1.ActivityStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ActivityStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityStatus> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ActivityStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityStatus as global::SAPB1.ActivityStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statusId">The value of statusId</param>
        public static global::SAPB1.ActivityStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityStatus> _source,
            int statusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatusId", statusId }
            };
            return new global::SAPB1.ActivityStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AttributeGroup as global::SAPB1.AttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AttributeGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AttributeGroup as global::SAPB1.AttributeGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AttributeGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AttributeGroup> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.AttributeGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IntegrationPackageConfigure as global::SAPB1.IntegrationPackageConfigureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.IntegrationPackageConfigureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IntegrationPackageConfigure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.IntegrationPackageConfigureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IntegrationPackageConfigure as global::SAPB1.IntegrationPackageConfigureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.IntegrationPackageConfigureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IntegrationPackageConfigure> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.IntegrationPackageConfigureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DunningLetter as global::SAPB1.DunningLetterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DunningLetterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DunningLetter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DunningLetterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DunningLetter as global::SAPB1.DunningLetterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="rowNumber">The value of rowNumber</param>
        public static global::SAPB1.DunningLetterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DunningLetter> _source,
            int rowNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RowNumber", rowNumber }
            };
            return new global::SAPB1.DunningLetterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Industry as global::SAPB1.IndustrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.IndustrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Industry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.IndustrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Industry as global::SAPB1.IndustrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="industryCode">The value of industryCode</param>
        public static global::SAPB1.IndustrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Industry> _source,
            int industryCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "IndustryCode", industryCode }
            };
            return new global::SAPB1.IndustrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserFieldMD as global::SAPB1.UserFieldMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserFieldMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserFieldMD> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserFieldMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserFieldMD as global::SAPB1.UserFieldMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="tableName">The value of tableName</param>
        /// <param name="fieldID">The value of fieldID</param>
        public static global::SAPB1.UserFieldMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserFieldMD> _source,
            string tableName, 
            int fieldID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TableName", tableName }, 
                { "FieldID", fieldID }
            };
            return new global::SAPB1.UserFieldMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserTablesMD as global::SAPB1.UserTablesMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserTablesMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserTablesMD> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserTablesMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserTablesMD as global::SAPB1.UserTablesMDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="tableName">The value of tableName</param>
        public static global::SAPB1.UserTablesMDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserTablesMD> _source,
            string tableName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TableName", tableName }
            };
            return new global::SAPB1.UserTablesMDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CostElement as global::SAPB1.CostElementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CostElementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CostElement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CostElementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CostElement as global::SAPB1.CostElementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.CostElementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CostElement> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.CostElementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PickList as global::SAPB1.PickListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PickListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PickList> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PickListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PickList as global::SAPB1.PickListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteentry">The value of absoluteentry</param>
        public static global::SAPB1.PickListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PickList> _source,
            int absoluteentry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Absoluteentry", absoluteentry }
            };
            return new global::SAPB1.PickListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeIDType as global::SAPB1.EmployeeIDTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeeIDTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeIDType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeeIDTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeIDType as global::SAPB1.EmployeeIDTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iDType">The value of iDType</param>
        public static global::SAPB1.EmployeeIDTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeIDType> _source,
            string iDType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "IDType", iDType }
            };
            return new global::SAPB1.EmployeeIDTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.QueryAuthGroup as global::SAPB1.QueryAuthGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.QueryAuthGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.QueryAuthGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.QueryAuthGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.QueryAuthGroup as global::SAPB1.QueryAuthGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="authGroupId">The value of authGroupId</param>
        public static global::SAPB1.QueryAuthGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.QueryAuthGroup> _source,
            int authGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AuthGroupId", authGroupId }
            };
            return new global::SAPB1.QueryAuthGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentRunExport as global::SAPB1.PaymentRunExportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PaymentRunExportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentRunExport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PaymentRunExportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentRunExport as global::SAPB1.PaymentRunExportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.PaymentRunExportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentRunExport> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.PaymentRunExportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentBlock as global::SAPB1.PaymentBlockSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PaymentBlockSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentBlock> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PaymentBlockSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentBlock as global::SAPB1.PaymentBlockSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.PaymentBlockSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentBlock> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.PaymentBlockSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserQuery as global::SAPB1.UserQuerySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserQuerySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserQuery> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserQuerySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserQuery as global::SAPB1.UserQuerySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="internalKey">The value of internalKey</param>
        /// <param name="queryCategory">The value of queryCategory</param>
        public static global::SAPB1.UserQuerySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserQuery> _source,
            int internalKey, 
            int queryCategory)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InternalKey", internalKey }, 
                { "QueryCategory", queryCategory }
            };
            return new global::SAPB1.UserQuerySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MaterialRevaluation as global::SAPB1.MaterialRevaluationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.MaterialRevaluationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MaterialRevaluation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.MaterialRevaluationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MaterialRevaluation as global::SAPB1.MaterialRevaluationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.MaterialRevaluationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MaterialRevaluation> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.MaterialRevaluationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CustomsGroup as global::SAPB1.CustomsGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CustomsGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CustomsGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CustomsGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CustomsGroup as global::SAPB1.CustomsGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.CustomsGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CustomsGroup> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.CustomsGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.GovPayCode as global::SAPB1.GovPayCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.GovPayCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.GovPayCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.GovPayCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.GovPayCode as global::SAPB1.GovPayCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absId">The value of absId</param>
        public static global::SAPB1.GovPayCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.GovPayCode> _source,
            int absId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsId", absId }
            };
            return new global::SAPB1.GovPayCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallStatus as global::SAPB1.ServiceCallStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallStatus> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallStatus as global::SAPB1.ServiceCallStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statusId">The value of statusId</param>
        public static global::SAPB1.ServiceCallStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallStatus> _source,
            int statusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatusId", statusId }
            };
            return new global::SAPB1.ServiceCallStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryOpeningBalance as global::SAPB1.InventoryOpeningBalanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.InventoryOpeningBalanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryOpeningBalance> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.InventoryOpeningBalanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.InventoryOpeningBalance as global::SAPB1.InventoryOpeningBalanceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="documentEntry">The value of documentEntry</param>
        public static global::SAPB1.InventoryOpeningBalanceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.InventoryOpeningBalance> _source,
            int documentEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocumentEntry", documentEntry }
            };
            return new global::SAPB1.InventoryOpeningBalanceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallProblemType as global::SAPB1.ServiceCallProblemTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallProblemTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallProblemType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallProblemTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallProblemType as global::SAPB1.ServiceCallProblemTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="problemTypeID">The value of problemTypeID</param>
        public static global::SAPB1.ServiceCallProblemTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallProblemType> _source,
            int problemTypeID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProblemTypeID", problemTypeID }
            };
            return new global::SAPB1.ServiceCallProblemTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ContractTemplate as global::SAPB1.ContractTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ContractTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ContractTemplate> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ContractTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ContractTemplate as global::SAPB1.ContractTemplateSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="templateName">The value of templateName</param>
        public static global::SAPB1.ContractTemplateSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ContractTemplate> _source,
            string templateName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TemplateName", templateName }
            };
            return new global::SAPB1.ContractTemplateSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeInfo as global::SAPB1.EmployeeInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeeInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeInfo> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeeInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeInfo as global::SAPB1.EmployeeInfoSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="employeeID">The value of employeeID</param>
        public static global::SAPB1.EmployeeInfoSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeInfo> _source,
            int employeeID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EmployeeID", employeeID }
            };
            return new global::SAPB1.EmployeeInfoSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeRoleSetup as global::SAPB1.EmployeeRoleSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeeRoleSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeRoleSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeeRoleSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeRoleSetup as global::SAPB1.EmployeeRoleSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="typeID">The value of typeID</param>
        public static global::SAPB1.EmployeeRoleSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeRoleSetup> _source,
            int typeID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TypeID", typeID }
            };
            return new global::SAPB1.EmployeeRoleSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilMultiIndexer as global::SAPB1.BrazilMultiIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BrazilMultiIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilMultiIndexer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BrazilMultiIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilMultiIndexer as global::SAPB1.BrazilMultiIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::SAPB1.BrazilMultiIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilMultiIndexer> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::SAPB1.BrazilMultiIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeStatus as global::SAPB1.EmployeeStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeeStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeStatus> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeeStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeStatus as global::SAPB1.EmployeeStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statusId">The value of statusId</param>
        public static global::SAPB1.EmployeeStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeStatus> _source,
            int statusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatusId", statusId }
            };
            return new global::SAPB1.EmployeeStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EDFProtocol as global::SAPB1.EDFProtocolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EDFProtocolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EDFProtocol> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EDFProtocolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EDFProtocol as global::SAPB1.EDFProtocolSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.EDFProtocolSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EDFProtocol> _source,
            global::SAPB1.ElectronicDocProtocolCodeStrEnum code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.EDFProtocolSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ImportDetermination as global::SAPB1.ImportDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ImportDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ImportDetermination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ImportDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ImportDetermination as global::SAPB1.ImportDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.ImportDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ImportDetermination> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.ImportDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CustomerEquipmentCard as global::SAPB1.CustomerEquipmentCardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CustomerEquipmentCardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CustomerEquipmentCard> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CustomerEquipmentCardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CustomerEquipmentCard as global::SAPB1.CustomerEquipmentCardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="equipmentCardNum">The value of equipmentCardNum</param>
        public static global::SAPB1.CustomerEquipmentCardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CustomerEquipmentCard> _source,
            int equipmentCardNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EquipmentCardNum", equipmentCardNum }
            };
            return new global::SAPB1.CustomerEquipmentCardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TerminationReason as global::SAPB1.TerminationReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TerminationReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TerminationReason> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TerminationReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TerminationReason as global::SAPB1.TerminationReasonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="reasonID">The value of reasonID</param>
        public static global::SAPB1.TerminationReasonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TerminationReason> _source,
            int reasonID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ReasonID", reasonID }
            };
            return new global::SAPB1.TerminationReasonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WithholdingTaxCode as global::SAPB1.WithholdingTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WithholdingTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WithholdingTaxCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WithholdingTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WithholdingTaxCode as global::SAPB1.WithholdingTaxCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="wTCode">The value of wTCode</param>
        public static global::SAPB1.WithholdingTaxCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WithholdingTaxCode> _source,
            string wTCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "WTCode", wTCode }
            };
            return new global::SAPB1.WithholdingTaxCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BillOfExchangeTransaction as global::SAPB1.BillOfExchangeTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BillOfExchangeTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BillOfExchangeTransaction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BillOfExchangeTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BillOfExchangeTransaction as global::SAPB1.BillOfExchangeTransactionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="bOETransactionkey">The value of bOETransactionkey</param>
        public static global::SAPB1.BillOfExchangeTransactionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BillOfExchangeTransaction> _source,
            int bOETransactionkey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BOETransactionkey", bOETransactionkey }
            };
            return new global::SAPB1.BillOfExchangeTransactionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallSolutionStatus as global::SAPB1.ServiceCallSolutionStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallSolutionStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallSolutionStatus> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallSolutionStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallSolutionStatus as global::SAPB1.ServiceCallSolutionStatusSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="statusId">The value of statusId</param>
        public static global::SAPB1.ServiceCallSolutionStatusSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallSolutionStatus> _source,
            int statusId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "StatusId", statusId }
            };
            return new global::SAPB1.ServiceCallSolutionStatusSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.KnowledgeBaseSolution as global::SAPB1.KnowledgeBaseSolutionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.KnowledgeBaseSolutionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.KnowledgeBaseSolution> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.KnowledgeBaseSolutionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.KnowledgeBaseSolution as global::SAPB1.KnowledgeBaseSolutionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="solutionCode">The value of solutionCode</param>
        public static global::SAPB1.KnowledgeBaseSolutionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.KnowledgeBaseSolution> _source,
            int solutionCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SolutionCode", solutionCode }
            };
            return new global::SAPB1.KnowledgeBaseSolutionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TransportationDocumentData as global::SAPB1.TransportationDocumentDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TransportationDocumentDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TransportationDocumentData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TransportationDocumentDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TransportationDocumentData as global::SAPB1.TransportationDocumentDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="transpDocNumber">The value of transpDocNumber</param>
        public static global::SAPB1.TransportationDocumentDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TransportationDocumentData> _source,
            int transpDocNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TranspDocNumber", transpDocNumber }
            };
            return new global::SAPB1.TransportationDocumentDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceContract as global::SAPB1.ServiceContractSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceContractSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceContract> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceContractSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceContract as global::SAPB1.ServiceContractSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="contractID">The value of contractID</param>
        public static global::SAPB1.ServiceContractSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceContract> _source,
            int contractID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ContractID", contractID }
            };
            return new global::SAPB1.ServiceContractSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCall as global::SAPB1.ServiceCallSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCall> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCall as global::SAPB1.ServiceCallSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="serviceCallID">The value of serviceCallID</param>
        public static global::SAPB1.ServiceCallSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCall> _source,
            int serviceCallID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ServiceCallID", serviceCallID }
            };
            return new global::SAPB1.ServiceCallSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Queue as global::SAPB1.QueueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.QueueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Queue> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.QueueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Queue as global::SAPB1.QueueSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="queueID">The value of queueID</param>
        public static global::SAPB1.QueueSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Queue> _source,
            string queueID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "QueueID", queueID }
            };
            return new global::SAPB1.QueueSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.RouteStage as global::SAPB1.RouteStageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.RouteStageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.RouteStage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.RouteStageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.RouteStage as global::SAPB1.RouteStageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="internalNumber">The value of internalNumber</param>
        public static global::SAPB1.RouteStageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.RouteStage> _source,
            int internalNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InternalNumber", internalNumber }
            };
            return new global::SAPB1.RouteStageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DunningTerm as global::SAPB1.DunningTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DunningTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DunningTerm> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DunningTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DunningTerm as global::SAPB1.DunningTermSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.DunningTermSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DunningTerm> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.DunningTermSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesForecast as global::SAPB1.SalesForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesForecast> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesForecast as global::SAPB1.SalesForecastSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.SalesForecastSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesForecast> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.SalesForecastSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TrackingNote as global::SAPB1.TrackingNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TrackingNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TrackingNote> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TrackingNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TrackingNote as global::SAPB1.TrackingNoteSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="trackingNoteNumber">The value of trackingNoteNumber</param>
        public static global::SAPB1.TrackingNoteSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TrackingNote> _source,
            int trackingNoteNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TrackingNoteNumber", trackingNoteNumber }
            };
            return new global::SAPB1.TrackingNoteSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPartner as global::SAPB1.BusinessPartnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BusinessPartnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPartner> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BusinessPartnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPartner as global::SAPB1.BusinessPartnerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="cardCode">The value of cardCode</param>
        public static global::SAPB1.BusinessPartnerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPartner> _source,
            string cardCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CardCode", cardCode }
            };
            return new global::SAPB1.BusinessPartnerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PackagesType as global::SAPB1.PackagesTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PackagesTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PackagesType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PackagesTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PackagesType as global::SAPB1.PackagesTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.PackagesTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PackagesType> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.PackagesTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeePosition as global::SAPB1.EmployeePositionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeePositionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeePosition> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeePositionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeePosition as global::SAPB1.EmployeePositionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="positionID">The value of positionID</param>
        public static global::SAPB1.EmployeePositionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeePosition> _source,
            int positionID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PositionID", positionID }
            };
            return new global::SAPB1.EmployeePositionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FormattedSearch as global::SAPB1.FormattedSearchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.FormattedSearchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FormattedSearch> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.FormattedSearchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FormattedSearch as global::SAPB1.FormattedSearchSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="index">The value of index</param>
        public static global::SAPB1.FormattedSearchSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FormattedSearch> _source,
            int index)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Index", index }
            };
            return new global::SAPB1.FormattedSearchSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Relationship as global::SAPB1.RelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.RelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Relationship> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.RelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Relationship as global::SAPB1.RelationshipSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="relationshipCode">The value of relationshipCode</param>
        public static global::SAPB1.RelationshipSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Relationship> _source,
            int relationshipCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "RelationshipCode", relationshipCode }
            };
            return new global::SAPB1.RelationshipSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserPermissionTree as global::SAPB1.UserPermissionTreeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserPermissionTreeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserPermissionTree> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserPermissionTreeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserPermissionTree as global::SAPB1.UserPermissionTreeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="permissionID">The value of permissionID</param>
        public static global::SAPB1.UserPermissionTreeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserPermissionTree> _source,
            string permissionID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PermissionID", permissionID }
            };
            return new global::SAPB1.UserPermissionTreeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PredefinedText as global::SAPB1.PredefinedTextSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PredefinedTextSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PredefinedText> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PredefinedTextSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PredefinedText as global::SAPB1.PredefinedTextSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.PredefinedTextSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PredefinedText> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.PredefinedTextSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ResourceProperty as global::SAPB1.ResourcePropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ResourcePropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ResourceProperty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ResourcePropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ResourceProperty as global::SAPB1.ResourcePropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ResourcePropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ResourceProperty> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ResourcePropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ChooseFromList as global::SAPB1.ChooseFromListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ChooseFromListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ChooseFromList> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ChooseFromListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ChooseFromList as global::SAPB1.ChooseFromListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="objectName">The value of objectName</param>
        public static global::SAPB1.ChooseFromListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ChooseFromList> _source,
            string objectName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ObjectName", objectName }
            };
            return new global::SAPB1.ChooseFromListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Attachments2 as global::SAPB1.Attachments2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.Attachments2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Attachments2> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.Attachments2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Attachments2 as global::SAPB1.Attachments2Single specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.Attachments2Single ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Attachments2> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.Attachments2Single(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserLanguage as global::SAPB1.UserLanguageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserLanguageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserLanguage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserLanguageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserLanguage as global::SAPB1.UserLanguageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.UserLanguageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserLanguage> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.UserLanguageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MultiLanguageTranslation as global::SAPB1.MultiLanguageTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.MultiLanguageTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MultiLanguageTranslation> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.MultiLanguageTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MultiLanguageTranslation as global::SAPB1.MultiLanguageTranslationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.MultiLanguageTranslationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MultiLanguageTranslation> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.MultiLanguageTranslationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BudgetDistribution as global::SAPB1.BudgetDistributionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BudgetDistributionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BudgetDistribution> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BudgetDistributionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BudgetDistribution as global::SAPB1.BudgetDistributionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="divisionCode">The value of divisionCode</param>
        public static global::SAPB1.BudgetDistributionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BudgetDistribution> _source,
            int divisionCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DivisionCode", divisionCode }
            };
            return new global::SAPB1.BudgetDistributionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DynamicSystemString as global::SAPB1.DynamicSystemStringSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DynamicSystemStringSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DynamicSystemString> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DynamicSystemStringSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DynamicSystemString as global::SAPB1.DynamicSystemStringSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="formID">The value of formID</param>
        /// <param name="itemID">The value of itemID</param>
        /// <param name="columnID">The value of columnID</param>
        public static global::SAPB1.DynamicSystemStringSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DynamicSystemString> _source,
            string formID, 
            string itemID, 
            string columnID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FormID", formID }, 
                { "ItemID", itemID }, 
                { "ColumnID", columnID }
            };
            return new global::SAPB1.DynamicSystemStringSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.HouseBankAccount as global::SAPB1.HouseBankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.HouseBankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.HouseBankAccount> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.HouseBankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.HouseBankAccount as global::SAPB1.HouseBankAccountSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.HouseBankAccountSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.HouseBankAccount> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.HouseBankAccountSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserGroup as global::SAPB1.UserGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserGroup as global::SAPB1.UserGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="userGroupId">The value of userGroupId</param>
        public static global::SAPB1.UserGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserGroup> _source,
            int userGroupId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UserGroupId", userGroupId }
            };
            return new global::SAPB1.UserGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.POSDailySummary as global::SAPB1.POSDailySummarySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.POSDailySummarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.POSDailySummary> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.POSDailySummarySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.POSDailySummary as global::SAPB1.POSDailySummarySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.POSDailySummarySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.POSDailySummary> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.POSDailySummarySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmailGroup as global::SAPB1.EmailGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmailGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmailGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmailGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmailGroup as global::SAPB1.EmailGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="emailGroupCode">The value of emailGroupCode</param>
        public static global::SAPB1.EmailGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmailGroup> _source,
            string emailGroupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EmailGroupCode", emailGroupCode }
            };
            return new global::SAPB1.EmailGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallProblemSubType as global::SAPB1.ServiceCallProblemSubTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceCallProblemSubTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallProblemSubType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceCallProblemSubTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceCallProblemSubType as global::SAPB1.ServiceCallProblemSubTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="problemSubTypeID">The value of problemSubTypeID</param>
        public static global::SAPB1.ServiceCallProblemSubTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceCallProblemSubType> _source,
            int problemSubTypeID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ProblemSubTypeID", problemSubTypeID }
            };
            return new global::SAPB1.ServiceCallProblemSubTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WTDCode as global::SAPB1.WTDCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WTDCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WTDCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WTDCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WTDCode as global::SAPB1.WTDCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.WTDCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WTDCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.WTDCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PM_ProjectDocumentData as global::SAPB1.PM_ProjectDocumentDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PM_ProjectDocumentDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PM_ProjectDocumentData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PM_ProjectDocumentDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PM_ProjectDocumentData as global::SAPB1.PM_ProjectDocumentDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.PM_ProjectDocumentDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PM_ProjectDocumentData> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.PM_ProjectDocumentDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PM_TimeSheetData as global::SAPB1.PM_TimeSheetDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PM_TimeSheetDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PM_TimeSheetData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PM_TimeSheetDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PM_TimeSheetData as global::SAPB1.PM_TimeSheetDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.PM_TimeSheetDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PM_TimeSheetData> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.PM_TimeSheetDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ColumnPreferences as global::SAPB1.ColumnPreferencesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ColumnPreferencesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ColumnPreferences> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ColumnPreferencesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ColumnPreferences as global::SAPB1.ColumnPreferencesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="user">The value of user</param>
        /// <param name="formID">The value of formID</param>
        /// <param name="itemNumber">The value of itemNumber</param>
        /// <param name="column">The value of column</param>
        public static global::SAPB1.ColumnPreferencesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ColumnPreferences> _source,
            int user, 
            string formID, 
            string itemNumber, 
            string column)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "User", user }, 
                { "FormID", formID }, 
                { "ItemNumber", itemNumber }, 
                { "Column", column }
            };
            return new global::SAPB1.ColumnPreferencesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityRecipientList as global::SAPB1.ActivityRecipientListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ActivityRecipientListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityRecipientList> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ActivityRecipientListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ActivityRecipientList as global::SAPB1.ActivityRecipientListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ActivityRecipientListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ActivityRecipientList> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ActivityRecipientListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientBookmarkTile as global::SAPB1.WebClientBookmarkTileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientBookmarkTileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientBookmarkTile> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientBookmarkTileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientBookmarkTile as global::SAPB1.WebClientBookmarkTileSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientBookmarkTileSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientBookmarkTile> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientBookmarkTileSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IdentificationCode as global::SAPB1.IdentificationCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.IdentificationCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IdentificationCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.IdentificationCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IdentificationCode as global::SAPB1.IdentificationCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.IdentificationCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IdentificationCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.IdentificationCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientFormSetting as global::SAPB1.WebClientFormSettingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientFormSettingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientFormSetting> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientFormSettingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientFormSetting as global::SAPB1.WebClientFormSettingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientFormSettingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientFormSetting> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientFormSettingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientDashboard as global::SAPB1.WebClientDashboardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientDashboardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientDashboard> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientDashboardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientDashboard as global::SAPB1.WebClientDashboardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientDashboardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientDashboard> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientDashboardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeductionTaxSubGroup as global::SAPB1.DeductionTaxSubGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DeductionTaxSubGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeductionTaxSubGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DeductionTaxSubGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DeductionTaxSubGroup as global::SAPB1.DeductionTaxSubGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupCode">The value of groupCode</param>
        public static global::SAPB1.DeductionTaxSubGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DeductionTaxSubGroup> _source,
            string groupCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupCode", groupCode }
            };
            return new global::SAPB1.DeductionTaxSubGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientRecentActivity as global::SAPB1.WebClientRecentActivitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientRecentActivitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientRecentActivity> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientRecentActivitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientRecentActivity as global::SAPB1.WebClientRecentActivitySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientRecentActivitySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientRecentActivity> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientRecentActivitySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientPreference as global::SAPB1.WebClientPreferenceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientPreferenceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientPreference> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientPreferenceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientPreference as global::SAPB1.WebClientPreferenceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientPreferenceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientPreference> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientPreferenceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientVariant as global::SAPB1.WebClientVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientVariant> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientVariant as global::SAPB1.WebClientVariantSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientVariantSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientVariant> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientVariantSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BudgetScenario as global::SAPB1.BudgetScenarioSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BudgetScenarioSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BudgetScenario> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BudgetScenarioSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BudgetScenario as global::SAPB1.BudgetScenarioSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.BudgetScenarioSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BudgetScenario> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.BudgetScenarioSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientVariantGroup as global::SAPB1.WebClientVariantGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WebClientVariantGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientVariantGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WebClientVariantGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WebClientVariantGroup as global::SAPB1.WebClientVariantGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.WebClientVariantGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WebClientVariantGroup> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.WebClientVariantGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CESTCodeData as global::SAPB1.CESTCodeDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CESTCodeDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CESTCodeData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CESTCodeDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CESTCodeData as global::SAPB1.CESTCodeDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.CESTCodeDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CESTCodeData> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.CESTCodeDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxReplStateSubData as global::SAPB1.TaxReplStateSubDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TaxReplStateSubDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxReplStateSubData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TaxReplStateSubDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxReplStateSubData as global::SAPB1.TaxReplStateSubDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="state">The value of state</param>
        public static global::SAPB1.TaxReplStateSubDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxReplStateSubData> _source,
            string state)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "State", state }
            };
            return new global::SAPB1.TaxReplStateSubDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BPVatExemptions as global::SAPB1.BPVatExemptionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BPVatExemptionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BPVatExemptions> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BPVatExemptionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BPVatExemptions as global::SAPB1.BPVatExemptionsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.BPVatExemptionsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BPVatExemptions> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.BPVatExemptionsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SQLQuery as global::SAPB1.SQLQuerySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SQLQuerySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SQLQuery> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SQLQuerySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SQLQuery as global::SAPB1.SQLQuerySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sqlCode">The value of sqlCode</param>
        public static global::SAPB1.SQLQuerySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SQLQuery> _source,
            string sqlCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SqlCode", sqlCode }
            };
            return new global::SAPB1.SQLQuerySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WTaxTypeCode as global::SAPB1.WTaxTypeCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WTaxTypeCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WTaxTypeCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WTaxTypeCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WTaxTypeCode as global::SAPB1.WTaxTypeCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.WTaxTypeCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WTaxTypeCode> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.WTaxTypeCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EBooks as global::SAPB1.EBooksSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EBooksSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EBooks> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EBooksSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EBooks as global::SAPB1.EBooksSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.EBooksSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EBooks> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.EBooksSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentReasonCode as global::SAPB1.PaymentReasonCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PaymentReasonCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentReasonCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PaymentReasonCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentReasonCode as global::SAPB1.PaymentReasonCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.PaymentReasonCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentReasonCode> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.PaymentReasonCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxInvoiceReport as global::SAPB1.TaxInvoiceReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TaxInvoiceReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxInvoiceReport> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TaxInvoiceReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxInvoiceReport as global::SAPB1.TaxInvoiceReportSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="taxInvoiceReportNumber">The value of taxInvoiceReportNumber</param>
        public static global::SAPB1.TaxInvoiceReportSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxInvoiceReport> _source,
            string taxInvoiceReportNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TaxInvoiceReportNumber", taxInvoiceReportNumber }
            };
            return new global::SAPB1.TaxInvoiceReportSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmploymentCategory as global::SAPB1.EmploymentCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmploymentCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmploymentCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmploymentCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmploymentCategory as global::SAPB1.EmploymentCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.EmploymentCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmploymentCategory> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.EmploymentCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ShortLinkMapping as global::SAPB1.ShortLinkMappingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ShortLinkMappingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ShortLinkMapping> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ShortLinkMappingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ShortLinkMapping as global::SAPB1.ShortLinkMappingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="guid">The value of guid</param>
        public static global::SAPB1.ShortLinkMappingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ShortLinkMapping> _source,
            string guid)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Guid", guid }
            };
            return new global::SAPB1.ShortLinkMappingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccountCategory as global::SAPB1.AccountCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AccountCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccountCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AccountCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccountCategory as global::SAPB1.AccountCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="categoryCode">The value of categoryCode</param>
        public static global::SAPB1.AccountCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccountCategory> _source,
            int categoryCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CategoryCode", categoryCode }
            };
            return new global::SAPB1.AccountCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CashFlowLineItem as global::SAPB1.CashFlowLineItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CashFlowLineItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CashFlowLineItem> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CashFlowLineItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CashFlowLineItem as global::SAPB1.CashFlowLineItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="lineItemID">The value of lineItemID</param>
        public static global::SAPB1.CashFlowLineItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CashFlowLineItem> _source,
            int lineItemID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "LineItemID", lineItemID }
            };
            return new global::SAPB1.CashFlowLineItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CampaignResponseType as global::SAPB1.CampaignResponseTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CampaignResponseTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CampaignResponseType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CampaignResponseTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CampaignResponseType as global::SAPB1.CampaignResponseTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="responseType">The value of responseType</param>
        public static global::SAPB1.CampaignResponseTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CampaignResponseType> _source,
            string responseType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ResponseType", responseType }
            };
            return new global::SAPB1.CampaignResponseTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunityInterestSetup as global::SAPB1.SalesOpportunityInterestSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesOpportunityInterestSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunityInterestSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesOpportunityInterestSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunityInterestSetup as global::SAPB1.SalesOpportunityInterestSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sequenceNo">The value of sequenceNo</param>
        public static global::SAPB1.SalesOpportunityInterestSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunityInterestSetup> _source,
            int sequenceNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SequenceNo", sequenceNo }
            };
            return new global::SAPB1.SalesOpportunityInterestSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExpenseTypeData as global::SAPB1.ExpenseTypeDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ExpenseTypeDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExpenseTypeData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ExpenseTypeDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ExpenseTypeData as global::SAPB1.ExpenseTypeDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="expenseType">The value of expenseType</param>
        public static global::SAPB1.ExpenseTypeDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ExpenseTypeData> _source,
            string expenseType)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ExpenseType", expenseType }
            };
            return new global::SAPB1.ExpenseTypeDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPlace as global::SAPB1.BusinessPlaceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BusinessPlaceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPlace> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BusinessPlaceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPlace as global::SAPB1.BusinessPlaceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="bPLID">The value of bPLID</param>
        public static global::SAPB1.BusinessPlaceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPlace> _source,
            int bPLID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BPLID", bPLID }
            };
            return new global::SAPB1.BusinessPlaceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LocalEra as global::SAPB1.LocalEraSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.LocalEraSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LocalEra> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.LocalEraSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LocalEra as global::SAPB1.LocalEraSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.LocalEraSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LocalEra> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.LocalEraSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Dimension as global::SAPB1.DimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Dimension> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Dimension as global::SAPB1.DimensionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dimensionCode">The value of dimensionCode</param>
        public static global::SAPB1.DimensionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Dimension> _source,
            int dimensionCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DimensionCode", dimensionCode }
            };
            return new global::SAPB1.DimensionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Item as global::SAPB1.ItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Item> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Item as global::SAPB1.ItemSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="itemCode">The value of itemCode</param>
        public static global::SAPB1.ItemSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Item> _source,
            string itemCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ItemCode", itemCode }
            };
            return new global::SAPB1.ItemSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.VM_B1ValuesData as global::SAPB1.VM_B1ValuesDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.VM_B1ValuesDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.VM_B1ValuesData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.VM_B1ValuesDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.VM_B1ValuesData as global::SAPB1.VM_B1ValuesDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.VM_B1ValuesDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.VM_B1ValuesData> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.VM_B1ValuesDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ValueMappingCommunicationData as global::SAPB1.ValueMappingCommunicationDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ValueMappingCommunicationDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ValueMappingCommunicationData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ValueMappingCommunicationDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ValueMappingCommunicationData as global::SAPB1.ValueMappingCommunicationDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.ValueMappingCommunicationDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ValueMappingCommunicationData> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.ValueMappingCommunicationDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IndiaSacCode as global::SAPB1.IndiaSacCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.IndiaSacCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IndiaSacCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.IndiaSacCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.IndiaSacCode as global::SAPB1.IndiaSacCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.IndiaSacCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.IndiaSacCode> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.IndiaSacCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceGroup as global::SAPB1.ServiceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ServiceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ServiceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ServiceGroup as global::SAPB1.ServiceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.ServiceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ServiceGroup> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.ServiceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MaterialGroup as global::SAPB1.MaterialGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.MaterialGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MaterialGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.MaterialGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.MaterialGroup as global::SAPB1.MaterialGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.MaterialGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.MaterialGroup> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.MaterialGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DefaultElementsforCR as global::SAPB1.DefaultElementsforCRSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DefaultElementsforCRSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DefaultElementsforCR> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DefaultElementsforCRSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DefaultElementsforCR as global::SAPB1.DefaultElementsforCRSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.DefaultElementsforCRSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DefaultElementsforCR> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.DefaultElementsforCRSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SingleUserConnection as global::SAPB1.SingleUserConnectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SingleUserConnectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SingleUserConnection> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SingleUserConnectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SingleUserConnection as global::SAPB1.SingleUserConnectionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.SingleUserConnectionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SingleUserConnection> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.SingleUserConnectionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SQLView as global::SAPB1.SQLViewSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SQLViewSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SQLView> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SQLViewSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SQLView as global::SAPB1.SQLViewSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="name">The value of name</param>
        public static global::SAPB1.SQLViewSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SQLView> _source,
            string name)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Name", name }
            };
            return new global::SAPB1.SQLViewSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NCMCodeSetup as global::SAPB1.NCMCodeSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NCMCodeSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NCMCodeSetup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NCMCodeSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NCMCodeSetup as global::SAPB1.NCMCodeSetupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.NCMCodeSetupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NCMCodeSetup> _source,
            int absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.NCMCodeSetupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NotaFiscalCST as global::SAPB1.NotaFiscalCSTSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NotaFiscalCSTSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NotaFiscalCST> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NotaFiscalCSTSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NotaFiscalCST as global::SAPB1.NotaFiscalCSTSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::SAPB1.NotaFiscalCSTSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NotaFiscalCST> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::SAPB1.NotaFiscalCSTSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NotaFiscalUsage as global::SAPB1.NotaFiscalUsageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NotaFiscalUsageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NotaFiscalUsage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NotaFiscalUsageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NotaFiscalUsage as global::SAPB1.NotaFiscalUsageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::SAPB1.NotaFiscalUsageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NotaFiscalUsage> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::SAPB1.NotaFiscalUsageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ClosingDateProcedure as global::SAPB1.ClosingDateProcedureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ClosingDateProcedureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ClosingDateProcedure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ClosingDateProcedureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ClosingDateProcedure as global::SAPB1.ClosingDateProcedureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="closingDateNum">The value of closingDateNum</param>
        public static global::SAPB1.ClosingDateProcedureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ClosingDateProcedure> _source,
            int closingDateNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ClosingDateNum", closingDateNum }
            };
            return new global::SAPB1.ClosingDateProcedureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NFTaxCategory as global::SAPB1.NFTaxCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NFTaxCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NFTaxCategory> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NFTaxCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NFTaxCategory as global::SAPB1.NFTaxCategorySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absId">The value of absId</param>
        public static global::SAPB1.NFTaxCategorySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NFTaxCategory> _source,
            int absId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsId", absId }
            };
            return new global::SAPB1.NFTaxCategorySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxCodeDeterminationTCD as global::SAPB1.TaxCodeDeterminationTCDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TaxCodeDeterminationTCDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxCodeDeterminationTCD> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TaxCodeDeterminationTCDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxCodeDeterminationTCD as global::SAPB1.TaxCodeDeterminationTCDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absId">The value of absId</param>
        public static global::SAPB1.TaxCodeDeterminationTCDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxCodeDeterminationTCD> _source,
            int absId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsId", absId }
            };
            return new global::SAPB1.TaxCodeDeterminationTCDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LandedCost as global::SAPB1.LandedCostSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.LandedCostSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LandedCost> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.LandedCostSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LandedCost as global::SAPB1.LandedCostSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.LandedCostSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LandedCost> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.LandedCostSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BOEDocumentType as global::SAPB1.BOEDocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BOEDocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BOEDocumentType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BOEDocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BOEDocumentType as global::SAPB1.BOEDocumentTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.BOEDocumentTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BOEDocumentType> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.BOEDocumentTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Contact as global::SAPB1.ContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Contact> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Contact as global::SAPB1.ContactSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="contactCode">The value of contactCode</param>
        public static global::SAPB1.ContactSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Contact> _source,
            int contactCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ContactCode", contactCode }
            };
            return new global::SAPB1.ContactSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BOEInstruction as global::SAPB1.BOEInstructionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BOEInstructionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BOEInstruction> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BOEInstructionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BOEInstruction as global::SAPB1.BOEInstructionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="instructionEntry">The value of instructionEntry</param>
        public static global::SAPB1.BOEInstructionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BOEInstruction> _source,
            int instructionEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "InstructionEntry", instructionEntry }
            };
            return new global::SAPB1.BOEInstructionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BPFiscalRegistryID as global::SAPB1.BPFiscalRegistryIDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BPFiscalRegistryIDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BPFiscalRegistryID> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BPFiscalRegistryIDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BPFiscalRegistryID as global::SAPB1.BPFiscalRegistryIDSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.BPFiscalRegistryIDSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BPFiscalRegistryID> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.BPFiscalRegistryIDSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxInvoice as global::SAPB1.SalesTaxInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesTaxInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxInvoice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesTaxInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesTaxInvoice as global::SAPB1.SalesTaxInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.SalesTaxInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesTaxInvoice> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.SalesTaxInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PurchaseTaxInvoice as global::SAPB1.PurchaseTaxInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PurchaseTaxInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PurchaseTaxInvoice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PurchaseTaxInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PurchaseTaxInvoice as global::SAPB1.PurchaseTaxInvoiceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.PurchaseTaxInvoiceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PurchaseTaxInvoice> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.PurchaseTaxInvoiceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CustomsDeclaration as global::SAPB1.CustomsDeclarationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CustomsDeclarationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CustomsDeclaration> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CustomsDeclarationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CustomsDeclaration as global::SAPB1.CustomsDeclarationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="cCDNum">The value of cCDNum</param>
        public static global::SAPB1.CustomsDeclarationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CustomsDeclaration> _source,
            string cCDNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CCDNum", cCDNum }
            };
            return new global::SAPB1.CustomsDeclarationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DistributionRule as global::SAPB1.DistributionRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.DistributionRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DistributionRule> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.DistributionRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.DistributionRule as global::SAPB1.DistributionRuleSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="factorCode">The value of factorCode</param>
        public static global::SAPB1.DistributionRuleSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.DistributionRule> _source,
            string factorCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FactorCode", factorCode }
            };
            return new global::SAPB1.DistributionRuleSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FiscalPrinter as global::SAPB1.FiscalPrinterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.FiscalPrinterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FiscalPrinter> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.FiscalPrinterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.FiscalPrinter as global::SAPB1.FiscalPrinterSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="equipmentNo">The value of equipmentNo</param>
        public static global::SAPB1.FiscalPrinterSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.FiscalPrinter> _source,
            string equipmentNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EquipmentNo", equipmentNo }
            };
            return new global::SAPB1.FiscalPrinterSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Resource as global::SAPB1.ResourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ResourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Resource> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ResourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Resource as global::SAPB1.ResourceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ResourceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Resource> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ResourceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BankPage as global::SAPB1.BankPageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BankPageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BankPage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BankPageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BankPage as global::SAPB1.BankPageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="accountCode">The value of accountCode</param>
        /// <param name="sequence">The value of sequence</param>
        public static global::SAPB1.BankPageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BankPage> _source,
            string accountCode, 
            int sequence)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AccountCode", accountCode }, 
                { "Sequence", sequence }
            };
            return new global::SAPB1.BankPageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ResourceGroup as global::SAPB1.ResourceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ResourceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ResourceGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ResourceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ResourceGroup as global::SAPB1.ResourceGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ResourceGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ResourceGroup> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ResourceGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Bank as global::SAPB1.BankSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BankSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Bank> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BankSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Bank as global::SAPB1.BankSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absoluteEntry">The value of absoluteEntry</param>
        public static global::SAPB1.BankSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Bank> _source,
            int absoluteEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsoluteEntry", absoluteEntry }
            };
            return new global::SAPB1.BankSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.JournalEntry as global::SAPB1.JournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.JournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.JournalEntry> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.JournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.JournalEntry as global::SAPB1.JournalEntrySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="jdtNum">The value of jdtNum</param>
        public static global::SAPB1.JournalEntrySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.JournalEntry> _source,
            int jdtNum)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "JdtNum", jdtNum }
            };
            return new global::SAPB1.JournalEntrySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.StockTaking as global::SAPB1.StockTakingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.StockTakingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.StockTaking> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.StockTakingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.StockTaking as global::SAPB1.StockTakingSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="itemCode">The value of itemCode</param>
        /// <param name="warehouseCode">The value of warehouseCode</param>
        public static global::SAPB1.StockTakingSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.StockTaking> _source,
            string itemCode, 
            string warehouseCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ItemCode", itemCode }, 
                { "WarehouseCode", warehouseCode }
            };
            return new global::SAPB1.StockTakingSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.RecurringPostings as global::SAPB1.RecurringPostingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.RecurringPostingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.RecurringPostings> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.RecurringPostingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.RecurringPostings as global::SAPB1.RecurringPostingsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        /// <param name="instance">The value of instance</param>
        public static global::SAPB1.RecurringPostingsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.RecurringPostings> _source,
            string code, 
            int instance)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }, 
                { "Instance", instance }
            };
            return new global::SAPB1.RecurringPostingsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CreditCard as global::SAPB1.CreditCardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CreditCardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CreditCard> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CreditCardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CreditCard as global::SAPB1.CreditCardSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="creditCardCode">The value of creditCardCode</param>
        public static global::SAPB1.CreditCardSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CreditCard> _source,
            int creditCardCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CreditCardCode", creditCardCode }
            };
            return new global::SAPB1.CreditCardSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Currency as global::SAPB1.CurrencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CurrencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Currency> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CurrencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Currency as global::SAPB1.CurrencySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.CurrencySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Currency> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.CurrencySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentTermsType as global::SAPB1.PaymentTermsTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PaymentTermsTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentTermsType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PaymentTermsTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PaymentTermsType as global::SAPB1.PaymentTermsTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="groupNumber">The value of groupNumber</param>
        public static global::SAPB1.PaymentTermsTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PaymentTermsType> _source,
            int groupNumber)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "GroupNumber", groupNumber }
            };
            return new global::SAPB1.PaymentTermsTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ElectronicFileFormat as global::SAPB1.ElectronicFileFormatSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ElectronicFileFormatSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ElectronicFileFormat> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ElectronicFileFormatSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ElectronicFileFormat as global::SAPB1.ElectronicFileFormatSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="formatID">The value of formatID</param>
        public static global::SAPB1.ElectronicFileFormatSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ElectronicFileFormat> _source,
            int formatID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FormatID", formatID }
            };
            return new global::SAPB1.ElectronicFileFormatSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LandedCostsCode as global::SAPB1.LandedCostsCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.LandedCostsCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LandedCostsCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.LandedCostsCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LandedCostsCode as global::SAPB1.LandedCostsCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.LandedCostsCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LandedCostsCode> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.LandedCostsCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Manufacturer as global::SAPB1.ManufacturerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ManufacturerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Manufacturer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ManufacturerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Manufacturer as global::SAPB1.ManufacturerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ManufacturerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Manufacturer> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ManufacturerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ItemGroups as global::SAPB1.ItemGroupsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ItemGroupsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ItemGroups> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ItemGroupsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ItemGroups as global::SAPB1.ItemGroupsSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="number">The value of number</param>
        public static global::SAPB1.ItemGroupsSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ItemGroups> _source,
            int number)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Number", number }
            };
            return new global::SAPB1.ItemGroupsSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPartnerProperty as global::SAPB1.BusinessPartnerPropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BusinessPartnerPropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPartnerProperty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BusinessPartnerPropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BusinessPartnerProperty as global::SAPB1.BusinessPartnerPropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="propertyCode">The value of propertyCode</param>
        public static global::SAPB1.BusinessPartnerPropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BusinessPartnerProperty> _source,
            int propertyCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PropertyCode", propertyCode }
            };
            return new global::SAPB1.BusinessPartnerPropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TransactionCode as global::SAPB1.TransactionCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TransactionCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TransactionCode> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TransactionCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TransactionCode as global::SAPB1.TransactionCodeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.TransactionCodeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TransactionCode> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.TransactionCodeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeTransfer as global::SAPB1.EmployeeTransferSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeeTransferSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeTransfer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeeTransferSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeTransfer as global::SAPB1.EmployeeTransferSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="transferID">The value of transferID</param>
        public static global::SAPB1.EmployeeTransferSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeTransfer> _source,
            int transferID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TransferID", transferID }
            };
            return new global::SAPB1.EmployeeTransferSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WeightMeasure as global::SAPB1.WeightMeasureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WeightMeasureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WeightMeasure> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WeightMeasureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.WeightMeasure as global::SAPB1.WeightMeasureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="unitCode">The value of unitCode</param>
        public static global::SAPB1.WeightMeasureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.WeightMeasure> _source,
            int unitCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "UnitCode", unitCode }
            };
            return new global::SAPB1.WeightMeasureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesPerson as global::SAPB1.SalesPersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesPersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesPerson> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesPersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesPerson as global::SAPB1.SalesPersonSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="salesEmployeeCode">The value of salesEmployeeCode</param>
        public static global::SAPB1.SalesPersonSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesPerson> _source,
            int salesEmployeeCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SalesEmployeeCode", salesEmployeeCode }
            };
            return new global::SAPB1.SalesPersonSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxCodeDetermination as global::SAPB1.TaxCodeDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.TaxCodeDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxCodeDetermination> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.TaxCodeDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.TaxCodeDetermination as global::SAPB1.TaxCodeDeterminationSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.TaxCodeDeterminationSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.TaxCodeDetermination> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.TaxCodeDeterminationSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CostCenterType as global::SAPB1.CostCenterTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CostCenterTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CostCenterType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CostCenterTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CostCenterType as global::SAPB1.CostCenterTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="costCenterTypeCode">The value of costCenterTypeCode</param>
        public static global::SAPB1.CostCenterTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CostCenterType> _source,
            string costCenterTypeCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CostCenterTypeCode", costCenterTypeCode }
            };
            return new global::SAPB1.CostCenterTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccrualType as global::SAPB1.AccrualTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AccrualTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccrualType> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AccrualTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AccrualType as global::SAPB1.AccrualTypeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AccrualTypeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AccrualType> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.AccrualTypeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NFModel as global::SAPB1.NFModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.NFModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NFModel> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.NFModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.NFModel as global::SAPB1.NFModelSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="absEntry">The value of absEntry</param>
        public static global::SAPB1.NFModelSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.NFModel> _source,
            string absEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "AbsEntry", absEntry }
            };
            return new global::SAPB1.NFModelSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilStringIndexer as global::SAPB1.BrazilStringIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BrazilStringIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilStringIndexer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BrazilStringIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilStringIndexer as global::SAPB1.BrazilStringIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::SAPB1.BrazilStringIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilStringIndexer> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::SAPB1.BrazilStringIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilNumericIndexer as global::SAPB1.BrazilNumericIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BrazilNumericIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilNumericIndexer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BrazilNumericIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilNumericIndexer as global::SAPB1.BrazilNumericIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="iD">The value of iD</param>
        public static global::SAPB1.BrazilNumericIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilNumericIndexer> _source,
            int iD)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ID", iD }
            };
            return new global::SAPB1.BrazilNumericIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilFuelIndexer as global::SAPB1.BrazilFuelIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BrazilFuelIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilFuelIndexer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BrazilFuelIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilFuelIndexer as global::SAPB1.BrazilFuelIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="fuelID">The value of fuelID</param>
        public static global::SAPB1.BrazilFuelIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilFuelIndexer> _source,
            int fuelID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "FuelID", fuelID }
            };
            return new global::SAPB1.BrazilFuelIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilBeverageIndexer as global::SAPB1.BrazilBeverageIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BrazilBeverageIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilBeverageIndexer> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BrazilBeverageIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.BrazilBeverageIndexer as global::SAPB1.BrazilBeverageIndexerSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="beverageID">The value of beverageID</param>
        public static global::SAPB1.BrazilBeverageIndexerSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.BrazilBeverageIndexer> _source,
            int beverageID)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "BeverageID", beverageID }
            };
            return new global::SAPB1.BrazilBeverageIndexerSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LegalData as global::SAPB1.LegalDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.LegalDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LegalData> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.LegalDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.LegalData as global::SAPB1.LegalDataSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="docEntry">The value of docEntry</param>
        public static global::SAPB1.LegalDataSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.LegalData> _source,
            int docEntry)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DocEntry", docEntry }
            };
            return new global::SAPB1.LegalDataSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PostingTemplates as global::SAPB1.PostingTemplatesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PostingTemplatesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PostingTemplates> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PostingTemplatesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PostingTemplates as global::SAPB1.PostingTemplatesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.PostingTemplatesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PostingTemplates> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.PostingTemplatesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ChecksforPayment as global::SAPB1.ChecksforPaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ChecksforPaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ChecksforPayment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ChecksforPaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ChecksforPayment as global::SAPB1.ChecksforPaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="checkKey">The value of checkKey</param>
        public static global::SAPB1.ChecksforPaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ChecksforPayment> _source,
            int checkKey)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "CheckKey", checkKey }
            };
            return new global::SAPB1.ChecksforPaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PriceList as global::SAPB1.PriceListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PriceListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PriceList> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PriceListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.PriceList as global::SAPB1.PriceListSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="priceListNo">The value of priceListNo</param>
        public static global::SAPB1.PriceListSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.PriceList> _source,
            int priceListNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PriceListNo", priceListNo }
            };
            return new global::SAPB1.PriceListSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Project as global::SAPB1.ProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Project> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Project as global::SAPB1.ProjectSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.ProjectSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Project> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.ProjectSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Warehouse as global::SAPB1.WarehouseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.WarehouseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Warehouse> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.WarehouseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Warehouse as global::SAPB1.WarehouseSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="warehouseCode">The value of warehouseCode</param>
        public static global::SAPB1.WarehouseSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Warehouse> _source,
            string warehouseCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "WarehouseCode", warehouseCode }
            };
            return new global::SAPB1.WarehouseSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ProductTree as global::SAPB1.ProductTreeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ProductTreeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ProductTree> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ProductTreeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ProductTree as global::SAPB1.ProductTreeSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="treeCode">The value of treeCode</param>
        public static global::SAPB1.ProductTreeSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ProductTree> _source,
            string treeCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "TreeCode", treeCode }
            };
            return new global::SAPB1.ProductTreeSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SpecialPrice as global::SAPB1.SpecialPriceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SpecialPriceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SpecialPrice> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SpecialPriceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SpecialPrice as global::SAPB1.SpecialPriceSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="itemCode">The value of itemCode</param>
        /// <param name="cardCode">The value of cardCode</param>
        public static global::SAPB1.SpecialPriceSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SpecialPrice> _source,
            string itemCode, 
            string cardCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ItemCode", itemCode }, 
                { "CardCode", cardCode }
            };
            return new global::SAPB1.SpecialPriceSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CreditPaymentMethod as global::SAPB1.CreditPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CreditPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CreditPaymentMethod> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CreditPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CreditPaymentMethod as global::SAPB1.CreditPaymentMethodSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="paymentMethodCode">The value of paymentMethodCode</param>
        public static global::SAPB1.CreditPaymentMethodSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CreditPaymentMethod> _source,
            int paymentMethodCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PaymentMethodCode", paymentMethodCode }
            };
            return new global::SAPB1.CreditPaymentMethodSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CreditCardPayment as global::SAPB1.CreditCardPaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.CreditCardPaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CreditCardPayment> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.CreditCardPaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.CreditCardPayment as global::SAPB1.CreditCardPaymentSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="dueDateCode">The value of dueDateCode</param>
        public static global::SAPB1.CreditCardPaymentSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.CreditCardPayment> _source,
            string dueDateCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "DueDateCode", dueDateCode }
            };
            return new global::SAPB1.CreditCardPaymentSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AlternateCatNum as global::SAPB1.AlternateCatNumSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AlternateCatNumSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AlternateCatNum> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AlternateCatNumSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AlternateCatNum as global::SAPB1.AlternateCatNumSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="itemCode">The value of itemCode</param>
        /// <param name="cardCode">The value of cardCode</param>
        /// <param name="substitute">The value of substitute</param>
        public static global::SAPB1.AlternateCatNumSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AlternateCatNum> _source,
            string itemCode, 
            string cardCode, 
            string substitute)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ItemCode", itemCode }, 
                { "CardCode", cardCode }, 
                { "Substitute", substitute }
            };
            return new global::SAPB1.AlternateCatNumSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Budget as global::SAPB1.BudgetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.BudgetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Budget> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.BudgetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Budget as global::SAPB1.BudgetSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="numerator">The value of numerator</param>
        public static global::SAPB1.BudgetSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Budget> _source,
            int numerator)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Numerator", numerator }
            };
            return new global::SAPB1.BudgetSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ItemProperty as global::SAPB1.ItemPropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ItemPropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ItemProperty> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ItemPropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ItemProperty as global::SAPB1.ItemPropertySingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="number">The value of number</param>
        public static global::SAPB1.ItemPropertySingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ItemProperty> _source,
            int number)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Number", number }
            };
            return new global::SAPB1.ItemPropertySingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AlertManagement as global::SAPB1.AlertManagementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.AlertManagementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AlertManagement> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.AlertManagementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.AlertManagement as global::SAPB1.AlertManagementSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.AlertManagementSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.AlertManagement> _source,
            int code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.AlertManagementSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserDefaultGroup as global::SAPB1.UserDefaultGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.UserDefaultGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserDefaultGroup> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.UserDefaultGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.UserDefaultGroup as global::SAPB1.UserDefaultGroupSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="code">The value of code</param>
        public static global::SAPB1.UserDefaultGroupSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.UserDefaultGroup> _source,
            string code)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "Code", code }
            };
            return new global::SAPB1.UserDefaultGroupSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunities as global::SAPB1.SalesOpportunitiesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.SalesOpportunitiesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunities> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.SalesOpportunitiesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.SalesOpportunities as global::SAPB1.SalesOpportunitiesSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sequentialNo">The value of sequentialNo</param>
        public static global::SAPB1.SalesOpportunitiesSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.SalesOpportunities> _source,
            int sequentialNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SequentialNo", sequentialNo }
            };
            return new global::SAPB1.SalesOpportunitiesSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.B1Session as global::SAPB1.B1SessionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.B1SessionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.B1Session> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.B1SessionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.B1Session as global::SAPB1.B1SessionSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="sessionId">The value of sessionId</param>
        public static global::SAPB1.B1SessionSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.B1Session> _source,
            string sessionId)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "SessionId", sessionId }
            };
            return new global::SAPB1.B1SessionSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ItemImage as global::SAPB1.ItemImageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.ItemImageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ItemImage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.ItemImageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.ItemImage as global::SAPB1.ItemImageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="itemCode">The value of itemCode</param>
        public static global::SAPB1.ItemImageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.ItemImage> _source,
            string itemCode)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "ItemCode", itemCode }
            };
            return new global::SAPB1.ItemImageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeImage as global::SAPB1.EmployeeImageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.EmployeeImageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeImage> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.EmployeeImageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.EmployeeImage as global::SAPB1.EmployeeImageSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="employeeNo">The value of employeeNo</param>
        public static global::SAPB1.EmployeeImageSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.EmployeeImage> _source,
            int employeeNo)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "EmployeeNo", employeeNo }
            };
            return new global::SAPB1.EmployeeImageSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Picture as global::SAPB1.PictureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="_keys">dictionary with the names and values of keys</param>
        public static global::SAPB1.PictureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Picture> _source, global::System.Collections.Generic.IDictionary<string, object> _keys)
        {
            return new global::SAPB1.PictureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// Get an entity of type global::SAPB1.Picture as global::SAPB1.PictureSingle specified by key from an entity set
        /// </summary>
        /// <param name="_source">source entity set</param>
        /// <param name="pictureName">The value of pictureName</param>
        public static global::SAPB1.PictureSingle ByKey(this global::Microsoft.OData.Client.DataServiceQuery<global::SAPB1.Picture> _source,
            string pictureName)
        {
            global::System.Collections.Generic.IDictionary<string, object> _keys = new global::System.Collections.Generic.Dictionary<string, object>
            {
                { "PictureName", pictureName }
            };
            return new global::SAPB1.PictureSingle(_source.Context, _source.GetKeyPath(global::Microsoft.OData.Client.Serializer.GetKeyString(_source.Context, _keys)));
        }
        /// <summary>
        /// There are no comments for GetApprovalTemplates in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetApprovalTemplates")]
        public static global::SAPB1.PaymentSingle GetApprovalTemplates(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Payment> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::SAPB1.PaymentSingle(_source.CreateFunctionQuerySingle<global::SAPB1.Payment>("SAPB1.GetApprovalTemplates", false));
        }
        /// <summary>
        /// There are no comments for GetReleasedAllocation in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetReleasedAllocation")]
        public static global::SAPB1.PickListSingle GetReleasedAllocation(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.PickList> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::SAPB1.PickListSingle(_source.CreateFunctionQuerySingle<global::SAPB1.PickList>("SAPB1.GetReleasedAllocation", false));
        }
        /// <summary>
        /// There are no comments for GetProtocolParameters in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetProtocolParameters")]
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.EDFProtocolWithParameters> GetProtocolParameters(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.EDFProtocol> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<global::SAPB1.EDFProtocolWithParameters>("SAPB1.GetProtocolParameters", false);
        }
        /// <summary>
        /// There are no comments for List in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("List")]
        public static global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.SQLQueryResult> List(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.SQLQuery> _source, string ParamList)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return _source.CreateFunctionQuerySingle<global::SAPB1.SQLQueryResult>("SAPB1.List", false, new global::Microsoft.OData.Client.UriOperationParameter("ParamList", ParamList));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.InternalReconciliation> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for RequestApproveCancellation in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("RequestApproveCancellation")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery RequestApproveCancellation(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.InternalReconciliation> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.RequestApproveCancellation"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Document> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Document> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Reopen in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Reopen")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Reopen(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Document> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Reopen"));
        }
        /// <summary>
        /// There are no comments for CreateCancellationDocument in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CreateCancellationDocument")]
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::SAPB1.Document> CreateCancellationDocument(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Document> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::SAPB1.Document>(_source.Context, _source.AppendRequestUri("SAPB1.CreateCancellationDocument"));
        }
        /// <summary>
        /// There are no comments for SetAsDefault in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("SetAsDefault")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery SetAsDefault(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.TaxWebSite> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.SetAsDefault"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.StockTransfer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.StockTransfer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for SaveDraftToDocument in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("SaveDraftToDocument")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery SaveDraftToDocument(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.StockTransfer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.SaveDraftToDocument"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.User> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for RemoveUserAndLicense in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("RemoveUserAndLicense")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery RemoveUserAndLicense(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.User> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.RemoveUserAndLicense"));
        }
        /// <summary>
        /// There are no comments for CancelApprovalRequest in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelApprovalRequest")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelApprovalRequest(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.ApprovalRequest> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelApprovalRequest"));
        }
        /// <summary>
        /// There are no comments for RestoreApprovalRequest in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("RestoreApprovalRequest")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery RestoreApprovalRequest(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.ApprovalRequest> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.RestoreApprovalRequest"));
        }
        /// <summary>
        /// There are no comments for CancelBlanketAgreement in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelBlanketAgreement")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelBlanketAgreement(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.BlanketAgreement> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelBlanketAgreement"));
        }
        /// <summary>
        /// There are no comments for GetRelatedDocuments in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetRelatedDocuments")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BlanketAgreementsDocument> GetRelatedDocuments(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.BlanketAgreement> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BlanketAgreementsDocument>(_source.Context, _source.AppendRequestUri("SAPB1.GetRelatedDocuments"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Campaign> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Payment> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for SaveDraftToDocument in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("SaveDraftToDocument")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery SaveDraftToDocument(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Payment> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.SaveDraftToDocument"));
        }
        /// <summary>
        /// There are no comments for CancelbyCurrentSystemDate in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelbyCurrentSystemDate")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelbyCurrentSystemDate(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Payment> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelbyCurrentSystemDate"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.InventoryCounting> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.MaterialRevaluation> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.MaterialRevaluation> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.EmployeeInfo> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.EmployeeInfo> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for GetIndexerTypeList in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetIndexerTypeList")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BrazilMultiIndexerParams> GetIndexerTypeList(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.BrazilMultiIndexer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BrazilMultiIndexerParams>(_source.Context, _source.AppendRequestUri("SAPB1.GetIndexerTypeList"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.ServiceContract> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.ServiceContract> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.ServiceCall> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.ProductionOrder> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for CancelProject in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelProject")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelProject(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.PM_ProjectDocumentData> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelProject"));
        }
        /// <summary>
        /// There are no comments for GetByMark in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetByMark")]
        public static global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::SAPB1.EBooks> GetByMark(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.EBooks> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuerySingle<global::SAPB1.EBooks>(_source.Context, _source.AppendRequestUri("SAPB1.GetByMark"));
        }
        /// <summary>
        /// There are no comments for GetByDocKey in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetByDocKey")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.EBooksParams> GetByDocKey(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.EBooks> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.EBooksParams>(_source.Context, _source.AppendRequestUri("SAPB1.GetByDocKey"));
        }
        /// <summary>
        /// There are no comments for SetDefaultBankChargesAllocationCode in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("SetDefaultBankChargesAllocationCode")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery SetDefaultBankChargesAllocationCode(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.BankChargesAllocationCode> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.SetDefaultBankChargesAllocationCode"));
        }
        /// <summary>
        /// There are no comments for RequestApproveCancellation in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("RequestApproveCancellation")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery RequestApproveCancellation(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Payment> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.RequestApproveCancellation"));
        }
        /// <summary>
        /// There are no comments for CancelTaxInvoiceReport in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelTaxInvoiceReport")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelTaxInvoiceReport(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.TaxInvoiceReport> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelTaxInvoiceReport"));
        }
        /// <summary>
        /// There are no comments for CancelDeposit in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelDeposit")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelDeposit(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Deposit> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelDeposit"));
        }
        /// <summary>
        /// There are no comments for CancelDepositbyCurrentSystemDate in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelDepositbyCurrentSystemDate")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelDepositbyCurrentSystemDate(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Deposit> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelDepositbyCurrentSystemDate"));
        }
        /// <summary>
        /// There are no comments for CancelTransportationDocument in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelTransportationDocument")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelTransportationDocument(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.TransportationDocumentData> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelTransportationDocument"));
        }
        /// <summary>
        /// There are no comments for Expose in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Expose")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Expose(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.SQLView> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Expose"));
        }
        /// <summary>
        /// There are no comments for Unexpose in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Unexpose")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Unexpose(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.SQLView> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Unexpose"));
        }
        /// <summary>
        /// There are no comments for CreateLinkedItem in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CreateLinkedItem")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CreateLinkedItem(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Resource> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CreateLinkedItem"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.JournalEntry> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Cancel in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Cancel")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Cancel(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.Item> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Cancel"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.PaymentTermsType> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
        /// <summary>
        /// There are no comments for GetIndexerTypeList in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetIndexerTypeList")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BrazilStringIndexerParams> GetIndexerTypeList(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.BrazilStringIndexer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BrazilStringIndexerParams>(_source.Context, _source.AppendRequestUri("SAPB1.GetIndexerTypeList"));
        }
        /// <summary>
        /// There are no comments for GetIndexerTypeList in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetIndexerTypeList")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BrazilNumericIndexerParams> GetIndexerTypeList(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.BrazilNumericIndexer> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.BrazilNumericIndexerParams>(_source.Context, _source.AppendRequestUri("SAPB1.GetIndexerTypeList"));
        }
        /// <summary>
        /// There are no comments for CloseLandedCost in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CloseLandedCost")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CloseLandedCost(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.LandedCost> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CloseLandedCost"));
        }
        /// <summary>
        /// There are no comments for CancelLandedCost in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("CancelLandedCost")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery CancelLandedCost(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.LandedCost> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.CancelLandedCost"));
        }
        /// <summary>
        /// There are no comments for GetAlertManagementList in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("GetAlertManagementList")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.AlertManagementParams> GetAlertManagementList(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.AlertManagement> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery<global::SAPB1.AlertManagementParams>(_source.Context, _source.AppendRequestUri("SAPB1.GetAlertManagementList"));
        }
        /// <summary>
        /// There are no comments for Close in the schema.
        /// </summary>
        [global::Microsoft.OData.Client.OriginalNameAttribute("Close")]
        public static global::Microsoft.OData.Client.DataServiceActionQuery Close(this global::Microsoft.OData.Client.DataServiceQuerySingle<global::SAPB1.SalesOpportunities> _source)
        {
            if (!_source.IsComposable)
            {
                throw new global::System.NotSupportedException("The previous function is not composable.");
            }

            return new global::Microsoft.OData.Client.DataServiceActionQuery(_source.Context, _source.AppendRequestUri("SAPB1.Close"));
        }
    }
}
